# Background

[Edge SmartScreen](https://docs.microsoft.com/en-us/deployedge/microsoft-edge-security-smartscreen) helps you identify reported phishing and malware websites, and also helps you make informed decisions about downloads.

Currently, users can use `options->put_AdditionalBrowserArguments(L"--disable-features=msSmartScreenProtection")` to control SmartScreen in the WebView2 application. It is essentially a startup parameter of the browser process. It must be determined when the WebView2Environment is created. And Cannot be modified at runtime.

To support more flexibility. We introduce a new API.

In this document we describe the new setting. We'd appreciate your feedback.


# Description
Users can use ICoreWebView2Environment to control it.When it is changed, all WebView2 applications using the same path of the user data folder will be changed.

The default value for `IsSmartScreenEnabled` is `true`,and defaults are always reset when the app is restarted
When this setting is set to `false`, It will turn off SmartScreen protection when visiting web pages.

Changes to `IsSmartScreenEnabled` does not take effect until the next navigation.


# Examples
```cpp
wil::com_ptr<ICoreWebView2Environment> enviroment;
void SettingsComponent::ToggleSmartScreenEnabled()
{
    wil::com_ptr<ICoreWebView2Environment11> coreWebView2Enviroment11;
    coreWebView2Enviroment11 =
                m_webViewEnvironment.try_query<ICoreWebView2Environment11>();
    if(coreWebView2Enviroment11) 
    {
        BOOL enabled;
        CHECK_FAILURE(coreWebView2Enviroment11->get_IsSmartScreenEnabled(&enabled));
        CHECK_FAILURE(coreWebView2Enviroment11->put_IsSmartScreenEnabled(enabled ? FALSE : TRUE));
    }
}
```

```c#
void ToggleSmartScreenEnabled()
{
    var coreWebView2Enviroment = webView.CoreWebView2.Environment;
    coreWebView2Enviroment.IsSmartScreenEnabled = !coreWebView2Enviroment.IsSmartScreenEnabled;
}
```

# Remarks
 All WebViews using the same user data folder share the same SmartScreen setting. When it is changed, the change will be applied to all WebViews using the same user data folder.

# API Notes

See [API Details](#api-details) section below for API reference.

# API Details

## Win32 C++
```cpp
[uuid(dc7ee01f-1fbf-440c-a11a-64472d18a27e), object, pointer_default(unique)] 
interface ICoreWebView2Environment11 : ICoreWebView2Environment10 { 
  /// SmartScreen helps you identify reported phishing and malware websites  
  /// also helps you make informed decisions about downloads. 
  /// `IsSmartScreenEnabled`  is used to control whether SmartScreen is turned on or not. 
  /// All WebViews using the same user data folder share the same SmartScreen setting. 
  /// When it is changed, the change will be applied to all WebViews using the 
  /// same user data folder. 
  /// Because SmartScreen helps protect your users from phishing and malware,
  /// we do not recommend turning it off unless you know your app is only loading 
  /// web content you control and trust.
  /// \snippet SettingsComponent.cpp ToggleSmartScreenEnabled.
  [propget] HRESULT IsSmartScreenEnabled([out, retval] BOOL* value); 

  /// Set the IsSmartScreenEnabled property. 
  [propput] HRESULT IsSmartScreenEnabled([in] BOOL value); 

} 
```

## .NET and WinRT

```c#
namespace Microsoft.Web.WebView2.Core
{
    public partial class CoreWebView2Environment
    {
        public bool IsSmartScreenEnabled { get; set; };
    }
}

```
